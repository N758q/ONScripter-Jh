# .github/workflows/build.yml
name: Build ONScripter-Jh Binaries

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Windows build env
        if: matrix.os == 'windows-latest'
        run: echo "Using VS + nmake"

      - name: Install Linux build tools
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential

      - name: Build on Windows
        if: matrix.os == 'windows-latest'
        run: nmake -f Makefile.Win
        shell: cmd

      - name: Test Windows binary
        if: matrix.os == 'windows-latest'
        run: .\onscripter.exe --version
        shell: cmd

      - name: Build on Linux
        if: matrix.os == 'ubuntu-latest'
        run: make -f Makefile.Linux
        shell: bash

      - name: Test Linux binary
        if: matrix.os == 'ubuntu-latest'
        run: ./onscripter --version
        shell: bash

      - name: Collect outputs
        run: |
          mkdir -p dist/${{ matrix.os == 'windows-latest' && 'windows' || 'linux' }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            move onscripter.exe dist/windows/
          else
            mv onscripter dist/linux/
          fi
        shell: bash

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: onscripter-${{ matrix.os }}
          path: dist
